{"mappings":"A,C,K,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,E,E,O,C,wB,I,G,I,E,E,SCCA,IAAM,EAAwB,SAAS,aAAa,CAAC,uBAC/C,EAAwB,SAAS,aAAa,CAAC,uBAc9C,eAAe,IACpB,IAAI,EAAqB,eAAe,OAAO,CAAC,sBAC5C,EAAqB,eAAe,OAAO,CAAC,sBAShD,GAPK,GAAuB,IAC1B,MAAM,IAEN,EAAqB,eAAe,OAAO,CAAC,sBAC5C,EAAqB,eAAe,OAAO,CAAC,uBAG1C,CAAC,GAAsB,CAAC,EAC1B,MAAM,AAAI,MAAM,4CAGlB,MAAO,CAAC,EAAoB,EAAmB,AACjD,CAqBA,eAAe,QACT,EAEJ,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,gEAC7B,EAAO,MAAM,EAAS,IAAI,EAC5B,CAAE,MAAO,EAAO,CACd,QAAQ,GAAG,CAAC,iCAAkC,EAAM,IAAI,CAAE,EAAM,OAAO,CACzE,CAEA,IAAM,EAAc,EAAK,WAAW,CAAG,EAAK,WAAW,CAAG,GACpD,EAAc,EAAK,OAAO,CAAG,EAAK,OAAO,CAAG,GAElD,eAAe,OAAO,CAAC,qBAAsB,GAC7C,eAAe,OAAO,CAAC,qBAAsB,EAC/C,CAjEK,GAEJ,AAAA,CAAA,UACC,GAAI,CACF,GAAM,CAAC,EAAa,EAAY,CAAG,MAAM,IACnC,EAAkB,AAoE5B,SAA4B,CAAW,CAAE,CAAW,EAGlD,IAAM,EAAmB,QAAQ,oBAGjC,IAAK,IAAM,KAAO,EACZ,EAAiB,cAAc,CAAC,IAClC,CAAA,CAAgB,CAAC,EAAI,CAAG,CAAgB,CAAC,EAAI,CAAC,OAAO,CAAC,oBAAqB,EAF/E,EAiBA,MAXI,AAXgB,CAAC,KAAM,KAA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","sources":["<anon>","src/components/dynamicShipping/scripts/updateShippingTag.js","node_modules/country-flag-icons/modules/hasFlag.js","node_modules/country-flag-icons/source/hasFlag.js","node_modules/country-flag-icons/modules/countries.json.js","node_modules/country-flag-icons/source/countries.json.js","src/components/dynamicShipping/scripts/updatePriceDuties.js","src/scripts/main.js","src/components/dynamicShipping/index.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire2b9f\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire2b9f\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"b2trS\", function(module, exports) {\n\n$parcel$export(module.exports, \"getCountryCodeAndName\", () => getCountryCodeAndName);\n\nvar $f9pEZ = parcelRequire(\"f9pEZ\");\nconst shippingTextContainer = document.querySelector(\".shipping-info-text\");\nconst shippingFlagContainer = document.querySelector(\".shipping-info-flag\");\nif (!shippingTextContainer) return;\n(async ()=>{\n    try {\n        const [countryCode, countryName] = await getCountryCodeAndName();\n        const shippingMessage = getShippingMessage(countryCode, countryName);\n        updateShippingText(shippingMessage);\n        updateFlagSource(countryCode);\n    } catch (error) {\n        console.error(\"Error updating product shipping information:\", error);\n    }\n})();\nasync function getCountryCodeAndName() {\n    let sessionCountryCode = sessionStorage.getItem(\"visitorCountryCode\");\n    let sessionCountryName = sessionStorage.getItem(\"visitorCountryName\");\n    if (!sessionCountryCode || !sessionCountryName) {\n        await fetchLocationInformation();\n        sessionCountryCode = sessionStorage.getItem(\"visitorCountryCode\");\n        sessionCountryName = sessionStorage.getItem(\"visitorCountryName\");\n    }\n    if (!sessionCountryCode || !sessionCountryName) throw new Error(\"Unable to retrieve country code and name\");\n    return [\n        sessionCountryCode,\n        sessionCountryName\n    ];\n}\nfunction updateShippingText(shippingMessage) {\n    if (!shippingMessage) {\n        console.log(\"shipping message is not updated because its \" + shippingMessage);\n        return;\n    }\n    shippingTextContainer.innerText = shippingMessage;\n}\nfunction updateFlagSource(countryCode) {\n    const flagSource = getFlagSourceLink(countryCode);\n    if (!(0, $f9pEZ.default)(countryCode) || !flagSource || !shippingFlagContainer) {\n        console.log(`flag source is not updated, flag source: ${flagSource}, shippingFlagContainer: ${shippingFlagContainer}`);\n        return;\n    }\n    shippingFlagContainer.setAttribute(\"xlink:href\", flagSource);\n}\nasync function fetchLocationInformation() {\n    let data;\n    try {\n        const response = await fetch(\"https://extreme-ip-lookup.com/json/?key=hjhgZenYok3qAJ0gG5OV\");\n        data = await response.json();\n    } catch (error) {\n        console.log(\"Fetching location info failed:\", error.name, error.message);\n    }\n    const countryCode = data.countryCode ? data.countryCode : \"\";\n    const countryName = data.country ? data.country : \"\";\n    sessionStorage.setItem(\"visitorCountryCode\", countryCode);\n    sessionStorage.setItem(\"visitorCountryName\", countryName);\n}\nfunction getFlagSourceLink(countryCode) {\n    const sourceLink = window?.svgDkSource;\n    const updatedSourceLink = sourceLink?.replace(/\\/([a-z]{2})\\.svg/i, `/${countryCode}.svg`);\n    return updatedSourceLink;\n}\nfunction getShippingMessage(countryCode, countryName) {\n    const euCountries = [\n        \"DK\",\n        \"AT\",\n        \"BE\",\n        \"BG\",\n        \"CY\",\n        \"CZ\",\n        \"DE\",\n        \"EE\",\n        \"ES\",\n        \"FI\",\n        \"FR\",\n        \"GR\",\n        \"HR\",\n        \"HU\",\n        \"IE\",\n        \"IT\",\n        \"LT\",\n        \"LU\",\n        \"LV\",\n        \"MT\",\n        \"NL\",\n        \"PL\",\n        \"PT\",\n        \"RO\",\n        \"SE\",\n        \"SI\",\n        \"SK\"\n    ];\n    const otherCountries = [\n        \"CH\",\n        \"GB\",\n        \"NO\"\n    ];\n    const shippingMessages = window?.dynamicShippingText;\n    let shippingMessage;\n    for(const key in shippingMessages)if (shippingMessages.hasOwnProperty(key)) shippingMessages[key] = shippingMessages[key].replace(\"{{ countryName }}\", countryName);\n    if (euCountries.includes(countryCode)) shippingMessage = shippingMessages.eu_shipping;\n    else if (otherCountries.includes(countryCode)) shippingMessage = shippingMessages.non_eu_shipping;\n    else if (countryCode === \"US\") shippingMessage = shippingMessages.us_shipping;\n    else // Default case for worldwide shipping\n    shippingMessage = shippingMessages.worldwide_shipping;\n    return shippingMessage;\n}\n\n});\nparcelRegister(\"f9pEZ\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $b07b99d68ff416fc$export$2e2bcd8739ae039);\n\nvar $9JM07 = parcelRequire(\"9JM07\");\nfunction $b07b99d68ff416fc$export$2e2bcd8739ae039(country) {\n    return (0, $9JM07.default).indexOf(country) >= 0;\n}\n\n});\nparcelRegister(\"9JM07\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $716d8cfea5a5faa3$export$2e2bcd8739ae039);\nvar $716d8cfea5a5faa3$export$2e2bcd8739ae039 = [\n    \"AC\",\n    \"AD\",\n    \"AE\",\n    \"AF\",\n    \"AG\",\n    \"AI\",\n    \"AL\",\n    \"AM\",\n    \"AO\",\n    \"AQ\",\n    \"AR\",\n    \"AS\",\n    \"AT\",\n    \"AU\",\n    \"AW\",\n    \"AX\",\n    \"AZ\",\n    \"BA\",\n    \"BB\",\n    \"BD\",\n    \"BE\",\n    \"BF\",\n    \"BG\",\n    \"BH\",\n    \"BI\",\n    \"BJ\",\n    \"BL\",\n    \"BM\",\n    \"BN\",\n    \"BO\",\n    \"BQ\",\n    \"BR\",\n    \"BS\",\n    \"BT\",\n    \"BV\",\n    \"BW\",\n    \"BY\",\n    \"BZ\",\n    \"CA\",\n    \"CC\",\n    \"CD\",\n    \"CF\",\n    \"CG\",\n    \"CH\",\n    \"CI\",\n    \"CK\",\n    \"CL\",\n    \"CM\",\n    \"CN\",\n    \"CO\",\n    \"CR\",\n    \"CU\",\n    \"CV\",\n    \"CW\",\n    \"CX\",\n    \"CY\",\n    \"CZ\",\n    \"DE\",\n    \"DJ\",\n    \"DK\",\n    \"DM\",\n    \"DO\",\n    \"DZ\",\n    \"EC\",\n    \"EE\",\n    \"EG\",\n    \"EH\",\n    \"ER\",\n    \"ES\",\n    \"ET\",\n    \"EU\",\n    \"FI\",\n    \"FJ\",\n    \"FK\",\n    \"FM\",\n    \"FO\",\n    \"FR\",\n    \"GA\",\n    \"GB\",\n    \"GD\",\n    \"GE\",\n    \"GF\",\n    \"GG\",\n    \"GH\",\n    \"GI\",\n    \"GL\",\n    \"GM\",\n    \"GN\",\n    \"GP\",\n    \"GQ\",\n    \"GR\",\n    \"GS\",\n    \"GT\",\n    \"GU\",\n    \"GW\",\n    \"GY\",\n    \"HK\",\n    \"HM\",\n    \"HN\",\n    \"HR\",\n    \"HT\",\n    \"HU\",\n    \"IC\",\n    \"ID\",\n    \"IE\",\n    \"IL\",\n    \"IM\",\n    \"IN\",\n    \"IO\",\n    \"IQ\",\n    \"IR\",\n    \"IS\",\n    \"IT\",\n    \"JE\",\n    \"JM\",\n    \"JO\",\n    \"JP\",\n    \"KE\",\n    \"KG\",\n    \"KH\",\n    \"KI\",\n    \"KM\",\n    \"KN\",\n    \"KP\",\n    \"KR\",\n    \"KW\",\n    \"KY\",\n    \"KZ\",\n    \"LA\",\n    \"LB\",\n    \"LC\",\n    \"LI\",\n    \"LK\",\n    \"LR\",\n    \"LS\",\n    \"LT\",\n    \"LU\",\n    \"LV\",\n    \"LY\",\n    \"MA\",\n    \"MC\",\n    \"MD\",\n    \"ME\",\n    \"MF\",\n    \"MG\",\n    \"MH\",\n    \"MK\",\n    \"ML\",\n    \"MM\",\n    \"MN\",\n    \"MO\",\n    \"MP\",\n    \"MQ\",\n    \"MR\",\n    \"MS\",\n    \"MT\",\n    \"MU\",\n    \"MV\",\n    \"MW\",\n    \"MX\",\n    \"MY\",\n    \"MZ\",\n    \"NA\",\n    \"NC\",\n    \"NE\",\n    \"NF\",\n    \"NG\",\n    \"NI\",\n    \"NL\",\n    \"NO\",\n    \"NP\",\n    \"NR\",\n    \"NU\",\n    \"NZ\",\n    \"OM\",\n    \"PA\",\n    \"PE\",\n    \"PF\",\n    \"PG\",\n    \"PH\",\n    \"PK\",\n    \"PL\",\n    \"PM\",\n    \"PN\",\n    \"PR\",\n    \"PS\",\n    \"PT\",\n    \"PW\",\n    \"PY\",\n    \"QA\",\n    \"RE\",\n    \"RO\",\n    \"RS\",\n    \"RU\",\n    \"RW\",\n    \"SA\",\n    \"SB\",\n    \"SC\",\n    \"SD\",\n    \"SE\",\n    \"SG\",\n    \"SH\",\n    \"SI\",\n    \"SJ\",\n    \"SK\",\n    \"SL\",\n    \"SM\",\n    \"SN\",\n    \"SO\",\n    \"SR\",\n    \"SS\",\n    \"ST\",\n    \"SV\",\n    \"SX\",\n    \"SY\",\n    \"SZ\",\n    \"TA\",\n    \"TC\",\n    \"TD\",\n    \"TF\",\n    \"TG\",\n    \"TH\",\n    \"TJ\",\n    \"TK\",\n    \"TL\",\n    \"TM\",\n    \"TN\",\n    \"TO\",\n    \"TR\",\n    \"TT\",\n    \"TV\",\n    \"TW\",\n    \"TZ\",\n    \"UA\",\n    \"UG\",\n    \"UM\",\n    \"US\",\n    \"UY\",\n    \"UZ\",\n    \"VA\",\n    \"VC\",\n    \"VE\",\n    \"VG\",\n    \"VI\",\n    \"VN\",\n    \"VU\",\n    \"WF\",\n    \"WS\",\n    \"XK\",\n    \"YE\",\n    \"YT\",\n    \"ZA\",\n    \"ZM\",\n    \"ZW\"\n];\n\n});\n\n\n\nparcelRegister(\"95mbF\", function(module, exports) {\n\nvar $b2trS = parcelRequire(\"b2trS\");\nconst priceContainer = document.querySelector(\"[data-product-block-item]\");\nconst customDuties = window.customDuties;\nif (!priceContainer || !customDuties) return;\n(async ()=>{\n    try {\n        const [countryCode] = await (0, $b2trS.getCountryCodeAndName)();\n        const warningDutyMessage = customDuties[countryCode];\n        if (!warningDutyMessage) return;\n        updateWarningDutyMessage(warningDutyMessage);\n    } catch (error) {\n        console.error(\"Error updating product shipping duties:\", error);\n    }\n})();\nfunction updateWarningDutyMessage(warningDutyMessage) {\n    const productPriceTemplates = document.querySelectorAll(\"[data-product-block-template]\");\n    if (!productPriceTemplates) return;\n    const dutyMessageContainer = document.createElement(\"div\");\n    dutyMessageContainer.classList.add(\"product-price__shipping-info\");\n    dutyMessageContainer.classList.add(\"product-price__shipping-info\");\n    dutyMessageContainer.innerText = warningDutyMessage;\n    priceContainer?.append(dutyMessageContainer);\n    productPriceTemplates.forEach((template)=>{\n        const fragment = template?.content;\n        if (!fragment) return;\n        const shippingMessageContClone = dutyMessageContainer?.cloneNode(true);\n        const fragmentPriceContainer = fragment.querySelector(\"[data-product-block-item]\");\n        fragmentPriceContainer?.append(shippingMessageContClone);\n    });\n}\n\n});\n\nparcelRequire(\"b2trS\");\nparcelRequire(\"95mbF\");\n\n\n\n})();\n//# sourceMappingURL=parcel_scripts.js.map\n","import { hasFlag } from 'country-flag-icons'\nconst shippingTextContainer = document.querySelector('.shipping-info-text');\nconst shippingFlagContainer = document.querySelector('.shipping-info-flag');\nif (!shippingTextContainer) return;\n\n(async () => {\n  try {\n    const [countryCode, countryName] = await getCountryCodeAndName();\n    const shippingMessage = getShippingMessage(countryCode, countryName);\n    updateShippingText(shippingMessage);\n    updateFlagSource(countryCode);\n  } catch (error) {\n    console.error('Error updating product shipping information:', error);\n  }\n})();\n\nexport async function getCountryCodeAndName() {\n  let sessionCountryCode = sessionStorage.getItem('visitorCountryCode');\n  let sessionCountryName = sessionStorage.getItem('visitorCountryName');\n\n  if (!sessionCountryCode || !sessionCountryName) {\n    await fetchLocationInformation();\n\n    sessionCountryCode = sessionStorage.getItem('visitorCountryCode');\n    sessionCountryName = sessionStorage.getItem('visitorCountryName');\n  }\n\n  if (!sessionCountryCode || !sessionCountryName) {\n    throw new Error('Unable to retrieve country code and name');\n  }\n\n  return [sessionCountryCode, sessionCountryName]\n}\n\nfunction updateShippingText(shippingMessage) {\n  if (!shippingMessage) {\n    console.log('shipping message is not updated because its ' + shippingMessage);\n    return;\n  }\n\n  shippingTextContainer.innerText = shippingMessage;\n}\n\nfunction updateFlagSource(countryCode) {\n  const flagSource = getFlagSourceLink(countryCode);\n  \n  if (!hasFlag(countryCode) || !flagSource || !shippingFlagContainer ) {\n    console.log(`flag source is not updated, flag source: ${flagSource}, shippingFlagContainer: ${shippingFlagContainer}`);\n    return\n  }\n  shippingFlagContainer.setAttribute('xlink:href', flagSource);\n}\n\nasync function fetchLocationInformation() {\n  let data;\n\n  try {\n    const response = await fetch('https://extreme-ip-lookup.com/json/?key=hjhgZenYok3qAJ0gG5OV');\n    data = await response.json();\n  } catch (error) {\n    console.log('Fetching location info failed:', error.name, error.message);\n  }\n    \n  const countryCode = data.countryCode ? data.countryCode : '';\n  const countryName = data.country ? data.country : '';\n\n  sessionStorage.setItem('visitorCountryCode', countryCode);\n  sessionStorage.setItem('visitorCountryName', countryName);\n}\n\nfunction getFlagSourceLink(countryCode) {\n  const sourceLink = window?.svgDkSource;\n  const updatedSourceLink = sourceLink?.replace(/\\/([a-z]{2})\\.svg/i, `/${countryCode}.svg`);\n  return updatedSourceLink;\n}\n\nfunction getShippingMessage(countryCode, countryName) {\n  const euCountries = [\"DK\", \"AT\", \"BE\", \"BG\", \"CY\", \"CZ\", \"DE\", \"EE\", \"ES\", \"FI\", \"FR\", \"GR\", \"HR\", \"HU\", \"IE\", \"IT\", \"LT\", \"LU\", \"LV\", \"MT\", \"NL\", \"PL\", \"PT\", \"RO\", \"SE\", \"SI\", \"SK\"];\n  const otherCountries = [\"CH\", \"GB\", \"NO\"];\n  const shippingMessages = window?.dynamicShippingText;\n  let shippingMessage;\n\n  for (const key in shippingMessages) {\n    if (shippingMessages.hasOwnProperty(key)) {\n      shippingMessages[key] = shippingMessages[key].replace('{{ countryName }}', countryName);\n    }\n  }\n\n  if (euCountries.includes(countryCode)) {\n    shippingMessage = shippingMessages.eu_shipping;\n  } else if (otherCountries.includes(countryCode)) {\n    shippingMessage = shippingMessages.non_eu_shipping;\n  } else if (countryCode === 'US') {\n    shippingMessage = shippingMessages.us_shipping;\n  } else {\n    // Default case for worldwide shipping\n    shippingMessage = shippingMessages.worldwide_shipping;\n  }\n  \n  return shippingMessage;\n}","import COUNTRIES from './countries.json.js';\nexport default function hasFlag(country) {\n  return COUNTRIES.indexOf(country) >= 0;\n}\n//# sourceMappingURL=hasFlag.js.map","import COUNTRIES from './countries.json.js'\r\n\r\nexport default function hasFlag(country) {\r\n\treturn COUNTRIES.indexOf(country) >= 0\r\n}","export default [\"AC\", \"AD\", \"AE\", \"AF\", \"AG\", \"AI\", \"AL\", \"AM\", \"AO\", \"AQ\", \"AR\", \"AS\", \"AT\", \"AU\", \"AW\", \"AX\", \"AZ\", \"BA\", \"BB\", \"BD\", \"BE\", \"BF\", \"BG\", \"BH\", \"BI\", \"BJ\", \"BL\", \"BM\", \"BN\", \"BO\", \"BQ\", \"BR\", \"BS\", \"BT\", \"BV\", \"BW\", \"BY\", \"BZ\", \"CA\", \"CC\", \"CD\", \"CF\", \"CG\", \"CH\", \"CI\", \"CK\", \"CL\", \"CM\", \"CN\", \"CO\", \"CR\", \"CU\", \"CV\", \"CW\", \"CX\", \"CY\", \"CZ\", \"DE\", \"DJ\", \"DK\", \"DM\", \"DO\", \"DZ\", \"EC\", \"EE\", \"EG\", \"EH\", \"ER\", \"ES\", \"ET\", \"EU\", \"FI\", \"FJ\", \"FK\", \"FM\", \"FO\", \"FR\", \"GA\", \"GB\", \"GD\", \"GE\", \"GF\", \"GG\", \"GH\", \"GI\", \"GL\", \"GM\", \"GN\", \"GP\", \"GQ\", \"GR\", \"GS\", \"GT\", \"GU\", \"GW\", \"GY\", \"HK\", \"HM\", \"HN\", \"HR\", \"HT\", \"HU\", \"IC\", \"ID\", \"IE\", \"IL\", \"IM\", \"IN\", \"IO\", \"IQ\", \"IR\", \"IS\", \"IT\", \"JE\", \"JM\", \"JO\", \"JP\", \"KE\", \"KG\", \"KH\", \"KI\", \"KM\", \"KN\", \"KP\", \"KR\", \"KW\", \"KY\", \"KZ\", \"LA\", \"LB\", \"LC\", \"LI\", \"LK\", \"LR\", \"LS\", \"LT\", \"LU\", \"LV\", \"LY\", \"MA\", \"MC\", \"MD\", \"ME\", \"MF\", \"MG\", \"MH\", \"MK\", \"ML\", \"MM\", \"MN\", \"MO\", \"MP\", \"MQ\", \"MR\", \"MS\", \"MT\", \"MU\", \"MV\", \"MW\", \"MX\", \"MY\", \"MZ\", \"NA\", \"NC\", \"NE\", \"NF\", \"NG\", \"NI\", \"NL\", \"NO\", \"NP\", \"NR\", \"NU\", \"NZ\", \"OM\", \"PA\", \"PE\", \"PF\", \"PG\", \"PH\", \"PK\", \"PL\", \"PM\", \"PN\", \"PR\", \"PS\", \"PT\", \"PW\", \"PY\", \"QA\", \"RE\", \"RO\", \"RS\", \"RU\", \"RW\", \"SA\", \"SB\", \"SC\", \"SD\", \"SE\", \"SG\", \"SH\", \"SI\", \"SJ\", \"SK\", \"SL\", \"SM\", \"SN\", \"SO\", \"SR\", \"SS\", \"ST\", \"SV\", \"SX\", \"SY\", \"SZ\", \"TA\", \"TC\", \"TD\", \"TF\", \"TG\", \"TH\", \"TJ\", \"TK\", \"TL\", \"TM\", \"TN\", \"TO\", \"TR\", \"TT\", \"TV\", \"TW\", \"TZ\", \"UA\", \"UG\", \"UM\", \"US\", \"UY\", \"UZ\", \"VA\", \"VC\", \"VE\", \"VG\", \"VI\", \"VN\", \"VU\", \"WF\", \"WS\", \"XK\", \"YE\", \"YT\", \"ZA\", \"ZM\", \"ZW\"];\n//# sourceMappingURL=countries.json.js.map","export default [\"AC\",\"AD\",\"AE\",\"AF\",\"AG\",\"AI\",\"AL\",\"AM\",\"AO\",\"AQ\",\"AR\",\"AS\",\"AT\",\"AU\",\"AW\",\"AX\",\"AZ\",\"BA\",\"BB\",\"BD\",\"BE\",\"BF\",\"BG\",\"BH\",\"BI\",\"BJ\",\"BL\",\"BM\",\"BN\",\"BO\",\"BQ\",\"BR\",\"BS\",\"BT\",\"BV\",\"BW\",\"BY\",\"BZ\",\"CA\",\"CC\",\"CD\",\"CF\",\"CG\",\"CH\",\"CI\",\"CK\",\"CL\",\"CM\",\"CN\",\"CO\",\"CR\",\"CU\",\"CV\",\"CW\",\"CX\",\"CY\",\"CZ\",\"DE\",\"DJ\",\"DK\",\"DM\",\"DO\",\"DZ\",\"EC\",\"EE\",\"EG\",\"EH\",\"ER\",\"ES\",\"ET\",\"EU\",\"FI\",\"FJ\",\"FK\",\"FM\",\"FO\",\"FR\",\"GA\",\"GB\",\"GD\",\"GE\",\"GF\",\"GG\",\"GH\",\"GI\",\"GL\",\"GM\",\"GN\",\"GP\",\"GQ\",\"GR\",\"GS\",\"GT\",\"GU\",\"GW\",\"GY\",\"HK\",\"HM\",\"HN\",\"HR\",\"HT\",\"HU\",\"IC\",\"ID\",\"IE\",\"IL\",\"IM\",\"IN\",\"IO\",\"IQ\",\"IR\",\"IS\",\"IT\",\"JE\",\"JM\",\"JO\",\"JP\",\"KE\",\"KG\",\"KH\",\"KI\",\"KM\",\"KN\",\"KP\",\"KR\",\"KW\",\"KY\",\"KZ\",\"LA\",\"LB\",\"LC\",\"LI\",\"LK\",\"LR\",\"LS\",\"LT\",\"LU\",\"LV\",\"LY\",\"MA\",\"MC\",\"MD\",\"ME\",\"MF\",\"MG\",\"MH\",\"MK\",\"ML\",\"MM\",\"MN\",\"MO\",\"MP\",\"MQ\",\"MR\",\"MS\",\"MT\",\"MU\",\"MV\",\"MW\",\"MX\",\"MY\",\"MZ\",\"NA\",\"NC\",\"NE\",\"NF\",\"NG\",\"NI\",\"NL\",\"NO\",\"NP\",\"NR\",\"NU\",\"NZ\",\"OM\",\"PA\",\"PE\",\"PF\",\"PG\",\"PH\",\"PK\",\"PL\",\"PM\",\"PN\",\"PR\",\"PS\",\"PT\",\"PW\",\"PY\",\"QA\",\"RE\",\"RO\",\"RS\",\"RU\",\"RW\",\"SA\",\"SB\",\"SC\",\"SD\",\"SE\",\"SG\",\"SH\",\"SI\",\"SJ\",\"SK\",\"SL\",\"SM\",\"SN\",\"SO\",\"SR\",\"SS\",\"ST\",\"SV\",\"SX\",\"SY\",\"SZ\",\"TA\",\"TC\",\"TD\",\"TF\",\"TG\",\"TH\",\"TJ\",\"TK\",\"TL\",\"TM\",\"TN\",\"TO\",\"TR\",\"TT\",\"TV\",\"TW\",\"TZ\",\"UA\",\"UG\",\"UM\",\"US\",\"UY\",\"UZ\",\"VA\",\"VC\",\"VE\",\"VG\",\"VI\",\"VN\",\"VU\",\"WF\",\"WS\",\"XK\",\"YE\",\"YT\",\"ZA\",\"ZM\",\"ZW\"]","import { getCountryCodeAndName } from \"./updateShippingTag\";\n\nconst priceContainer = document.querySelector('[data-product-block-item]');\nconst customDuties = window.customDuties;\n\nif (!priceContainer || !customDuties) return;\n\n(async () => {\n  try {\n    const [countryCode] = await getCountryCodeAndName();\n    const warningDutyMessage = customDuties[countryCode];\n    if (!warningDutyMessage) return;\n    updateWarningDutyMessage(warningDutyMessage);\n  } catch (error) {\n    console.error('Error updating product shipping duties:', error);\n  }\n})();\n\nfunction updateWarningDutyMessage(warningDutyMessage) {\n  const productPriceTemplates = document.querySelectorAll('[data-product-block-template]');\n\n  if (!productPriceTemplates) return;\n\n  const dutyMessageContainer = document.createElement('div');\n  dutyMessageContainer.classList.add('product-price__shipping-info');\n  dutyMessageContainer.classList.add('product-price__shipping-info');\n  dutyMessageContainer.innerText = warningDutyMessage;\n  priceContainer?.append(dutyMessageContainer);\n\n  productPriceTemplates.forEach(template => {\n    const fragment = template?.content;\n    if (!fragment) return;\n  \n    const shippingMessageContClone = dutyMessageContainer?.cloneNode(true);\n    const fragmentPriceContainer = fragment.querySelector('[data-product-block-item]');\n  \n    fragmentPriceContainer?.append(shippingMessageContClone);\n  })\n}\n","import \"../components/dynamicShipping/\";","import './scripts/updateShippingTag';\nimport './scripts/updatePriceDuties';"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","getCountryCodeAndName","$f9pEZ","shippingTextContainer","document","querySelector","shippingFlagContainer","sessionCountryCode","sessionStorage","getItem","sessionCountryName","fetchLocationInformation","data","response","fetch","json","error","console","log","name","message","countryCode","countryName","country","setItem","shippingMessage","getShippingMessage","shippingMessages","window","dynamicShippingText","key","hasOwnProperty","replace","euCountries","includes","eu_shipping","otherCountries","non_eu_shipping","us_shipping","worldwide_shipping","updateShippingText","innerText","updateFlagSource","flagSource","getFlagSourceLink","sourceLink","svgDkSource","default","setAttribute","$b07b99d68ff416fc$export$2e2bcd8739ae039","$9JM07","indexOf","$716d8cfea5a5faa3$export$2e2bcd8739ae039","$b2trS","priceContainer","customDuties","warningDutyMessage","updateWarningDutyMessage","productPriceTemplates","querySelectorAll","dutyMessageContainer","createElement","classList","add","append","forEach","template","fragment","content","shippingMessageContClone","cloneNode","fragmentPriceContainer","COUNTRIES","hasFlag"],"version":3,"file":"parcel_scripts.js.map"}