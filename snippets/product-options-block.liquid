{%- liquid
  assign options = block.settings
  assign primary_swatch_option_type = options.primary_swatch_option_type

  assign option_name = options.option_name
  assign product_list = options.product_list
  assign product_list_metafield = options.product_list_metafield

  assign active_option_value = product.options_by_name[option_name].values | first
  assign current_variant_id = product.selected_or_first_available_variant.id

  if product_list_metafield != blank
    assign product_list_metafield_splitted = product_list_metafield | split: '.'
    assign product_list_metafield_namespace = product_list_metafield_splitted[0]
    assign product_list_metafield_key = product_list_metafield_splitted[1]

    assign product_list = product.metafields[product_list_metafield_namespace][product_list_metafield_key].value
  endif

  assign swatch_patterns = settings.primary_custom_colors_and_patterns
  assign primary_custom_colors_and_patterns = swatch_patterns | newline_to_br | split: '<br />'

  assign current_color_scheme = 'default'
  assign target_color_scheme = section.settings.color_scheme

  if section.settings.color_scheme == 'default'
    assign target_color_scheme = settings.default_color_scheme
  endif

  case target_color_scheme
    when 'primary'
      assign current_color_scheme = 'primary'
    when 'secondary'
      assign current_color_scheme = 'secondary'
    when 'custom-1'
      assign current_color_scheme = 'custom_1'
    when 'custom-2'
      assign current_color_scheme = 'custom_2'
    when 'custom-3'
      assign current_color_scheme = 'custom_3'
  endcase

  assign key = current_color_scheme | append: '_background_color'
  assign section_background_color = settings[key] | downcase
-%}

{%- if product != blank and product_list != blank and option_name != blank -%}
  <div
    class='product-variant-picker theme-with-size{{ settings.primary_size_for_product_pages }}-swatch-in-product-section {% if primary_swatch_option_type contains 'dropdown' %} product-variant-picker--with-dropdown-options {% endif %}'
    {{ block.shopify_attributes }}
  >
    <div class='product-variant-picker__list'>
      {% if primary_swatch_option_type contains 'dropdown' %}
        <div>
          <div class='product-variant-picker__option-label'>
            {{ option_name }}
          </div>

          <dropdown-opener
            class='variant-picker-dropdown__toggle variant-picker-dropdown__toggle--with-color-swatch {% if primary_swatch_option_type == 'dropdown-underline' %} variant-picker-dropdown__toggle--underline {% elsif primary_swatch_option_type == 'dropdown-outline' %} variant-picker-dropdown__toggle--outline {% elsif primary_swatch_option_type == 'dropdown-solid' %} variant-picker-dropdown__toggle--solid {% endif %}'
            data-aria-expanded='false'
            data-float-element-id='product-options-block-dropdown-{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
            tabindex='0'
          >
            <div class='variant-picker-dropdown__toggle-label'>
              {%- liquid
                assign color_downcase = active_option_value | downcase | strip

                assign is_image = false
                assign selected_color_value = color_downcase

                for pattern in primary_custom_colors_and_patterns
                  assign config = pattern | split: '::'
                  assign pattern_label_downcase = config[0] | downcase | strip
                  assign pattern_value = config[1]

                  if pattern_label_downcase == color_downcase
                    unless pattern_value contains 'http'
                      if pattern_value contains '.png' or pattern_value contains '.jp'
                        assign selected_color_value = pattern_value

                        assign is_image = true
                      endif
                    endunless
                  endif
                endfor
              -%}

              <shape-swatch
                data-color='{{ active_option_value }}'
                data-section-background='{{ section_background_color | strip }}'
                data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
                class='color-swatch variant-picker-dropdown__color-swatch {% if settings.primary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} '
                style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
                {% if is_image %}
                  is-image
                {% endif %}
              ></shape-swatch>

              <span>{{ active_option_value }}</span>
            </div>
            {%- render 'icon', icon_name: 'chevron', class: 'variant-picker-dropdown__chevron' -%}
          </dropdown-opener>
          <float-element
            class='variant-picker-dropdown {% if primary_swatch_option_type == 'dropdown-underline' %} variant-picker-dropdown--underline {% endif %}'
            aria-hidden='true'
            id='product-options-block-dropdown-{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'
            data-placement='bottom-start'
            data-main-axis-offset='{% if settings.round_level != "1" %} 8{% else %} 0{% endif %}'
          >
            <template data-float-element-template='product-options-block-dropdown-{{ sectionId }}-{{ product.id }}-{{ option.position }}-{{ forloop.index0 }}'>
              <div class='variant-picker-dropdown__body'>
                {% for product in product_list %}
                  {%- liquid
                    assign target_option_position = 'option' | append: product.options_by_name[option_name].position
                    assign target_option_value = product.options_by_name[option_name].values | first
                    assign variant = product.variants | where: target_option_position, value | first

                    if product_list_metafield != blank
                      assign variant = product
                      assign target_option_position = 'option' | append: variant.product.options_by_name[option_name].position
                      assign target_option_value = variant[target_option_position]
                    endif

                    assign color_downcase = target_option_value | downcase | strip

                    assign is_image = false
                    assign selected_color_value = color_downcase

                    for pattern in primary_custom_colors_and_patterns
                      assign config = pattern | split: '::'
                      assign pattern_label_downcase = config[0] | downcase | strip
                      assign pattern_value = config[1]

                      if pattern_label_downcase == color_downcase
                        unless pattern_value contains 'http'
                          if pattern_value contains '.png' or pattern_value contains '.jp'
                            assign selected_color_value = pattern_value

                            assign is_image = true
                          endif
                        endunless
                      endif
                    endfor
                  -%}

                  {% if variant != blank %}
                    <a
                      class='variant-picker-dropdown__item variant-picker-dropdown__item--with-color-swatch {% if variant.id == current_variant_id %} selected {% endif %}'
                      href='{{ variant.url }}'
                      aria-label='{{ target_option_value }}'
                    >
                      <shape-swatch
                        data-color='{{ target_option_value }}'
                        data-section-background='{{ section_background_color | strip }}'
                        data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
                        class='color-swatch variant-picker-dropdown__color-swatch {% if settings.primary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %} '
                        style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
                        {% if is_image %}
                          is-image
                        {% endif %}
                      ></shape-swatch>
                      <span>{{ target_option_value }}</span>
                    </a>
                  {% endif %}
                {% endfor %}
              </div>
            </template>
          </float-element>
        </div>
      {% elsif primary_swatch_option_type contains 'variant-images' or primary_swatch_option_type == 'swatches' %}
        <color-swatches-picker>
          <div class='product-variant-picker__option-label'>
            {{ option_name }}

            <span class='truncate product-variant-picker__option-active-color' data-color-swatches-picker-active-value>
              {{- option.selected_value -}}
            </span>
          </div>

          {%- if primary_swatch_option_type contains 'variant-images' -%}
            <div class='image-swatches product-variant-picker__image-swatches'>
              {% for product in product_list %}
                {%- liquid
                  assign target_option_position = 'option' | append: product.options_by_name[option_name].position
                  assign target_option_value = product.options_by_name[option_name].values | first
                  assign variant = product.variants | where: target_option_position, value | first

                  if product_list_metafield != blank
                    assign variant = product
                    assign target_option_position = 'option' | append: variant.product.options_by_name[option_name].position
                    assign target_option_value = variant[target_option_position]
                  endif

                  assign color_downcase = target_option_value | downcase | strip

                  assign is_image = false
                  assign selected_color_value = color_downcase

                  for pattern in primary_custom_colors_and_patterns
                    assign config = pattern | split: '::'
                    assign pattern_label_downcase = config[0] | downcase | strip
                    assign pattern_value = config[1]

                    if pattern_label_downcase == color_downcase
                      unless pattern_value contains 'http'
                        if pattern_value contains '.png' or pattern_value contains '.jp'
                          assign selected_color_value = pattern_value

                          assign is_image = true
                        endif
                      endunless
                    endif
                  endfor
                -%}
                {% if variant != blank %}
                  <a
                    class='image-swatches__item  image-swatches__item--{{ settings.primary_shape_for_product_pages }} {% if variant.id == current_variant_id %} selected {% endif %}'
                    href='{{ variant.url }}'
                    aria-label='{{ target_option_value }}'
                    data-color-swatches-picker-label
                    data-value='{{ target_option_value }}'
                  >
                    {%- if variant.image.src != blank -%}
                      <div class='image-swatches__item-body-wrapper {% if enable_darken_mode %} multiply-mode {% endif %} image-swatches__item-body-wrapper--{{ settings.primary_shape_for_product_pages }}'>
                        <img
                          {% render 'image-attributes',
                            image: variant.image,
                            size: 'small',
                            is_multiply_target: enable_darken_mode,
                            class: 'image-swatches__item-body'
                          %}
                        >
                        <div class='image-swatches__item-line'></div>
                      </div>

                    {%- else -%}
                      <div class='image-swatches__item-body-wrapper image-swatches__item-body-wrapper--{{ settings.primary_shape_for_product_pages }}'>
                        {% render 'icon-color-image-placeholder', class: 'image-swatches__item-body' %}
                      </div>
                    {%- endif -%}
                  </a>
                {% endif %}
              {% endfor %}
            </div>
          {% else %}
            <div class='product-variant-picker__shape-swatches'>
              {% for product in product_list %}
                {%- liquid
                  assign target_option_position = 'option' | append: product.options_by_name[option_name].position
                  assign target_option_value = product.options_by_name[option_name].values | first
                  assign variant = product.variants | where: target_option_position, value | first

                  if product_list_metafield != blank
                    assign variant = product
                    assign target_option_position = 'option' | append: variant.product.options_by_name[option_name].position
                    assign target_option_value = variant[target_option_position]
                  endif

                  assign color_downcase = target_option_value | downcase | strip

                  assign is_image = false
                  assign selected_color_value = color_downcase

                  for pattern in primary_custom_colors_and_patterns
                    assign config = pattern | split: '::'
                    assign pattern_label_downcase = config[0] | downcase | strip
                    assign pattern_value = config[1]

                    if pattern_label_downcase == color_downcase
                      unless pattern_value contains 'http'
                        if pattern_value contains '.png' or pattern_value contains '.jp'
                          assign selected_color_value = pattern_value

                          assign is_image = true
                        endif
                      endunless
                    endif
                  endfor
                -%}
                {% if variant != blank %}
                  <a
                    class='color-swatch-select-parent {% if variant.id == current_variant_id %} selected {% endif %}'
                    href='{{ variant.url }}'
                    aria-label='{{ target_option_value }}'
                    data-color-swatches-picker-label
                    data-value='{{ target_option_value }}'
                  >
                    <shape-swatch
                      data-color='{{ target_option_value }}'
                      data-section-background='{{ section_background_color | strip }}'
                      data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
                      class='color-swatch color-swatch--{{ settings.primary_shape_for_product_pages }}'
                      style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
                      {% if is_image %}
                        is-image
                      {% endif %}
                    >
                      <div class='color-swatch__line'></div>
                    </shape-swatch>
                  </a>
                {% endif %}
              {% endfor %}
            </div>
          {% endif %}
        </color-swatches-picker>
      {% else %}
        <div>
          <div class='product-variant-picker__option-label'>
            {{ option_name }}
          </div>

          <div class='product-variant-picker__pill-list'>
            {% for product in product_list %}
              {%- liquid
                assign target_option_position = 'option' | append: product.options_by_name[option_name].position
                assign target_option_value = product.options_by_name[option_name].values | first
                assign variant = product.variants | where: target_option_position, value | first

                if product_list_metafield != blank
                  assign variant = product
                  assign target_option_position = 'option' | append: variant.product.options_by_name[option_name].position
                  assign target_option_value = variant[target_option_position]
                endif

                assign color_downcase = target_option_value | downcase | strip

                assign is_image = false
                assign selected_color_value = color_downcase

                for pattern in primary_custom_colors_and_patterns
                  assign config = pattern | split: '::'
                  assign pattern_label_downcase = config[0] | downcase | strip
                  assign pattern_value = config[1]

                  if pattern_label_downcase == color_downcase
                    unless pattern_value contains 'http'
                      if pattern_value contains '.png' or pattern_value contains '.jp'
                        assign selected_color_value = pattern_value

                        assign is_image = true
                      endif
                    endunless
                  endif
                endfor
              -%}
              {% if variant != blank %}
                <div>
                  <a
                    class='pill pill--large pill--with-color-swatch-in-product-section {% if primary_swatch_option_type == 'button-outline' %} pill--outline {% endif %} {% if primary_swatch_option_type == 'button-solid' %} pill--solid {% endif %} {% if primary_swatch_option_type == 'button-underline' %} pill--underline {% endif %} {% if variant.id == current_variant_id %} selected {% endif %}'
                    href='{{ variant.url }}'
                    aria-label='{{ target_option_value }}'
                  >
                    <shape-swatch
                      data-color='{{ target_option_value }}'
                      data-section-background='{{ section_background_color | strip }}'
                      data-colors-patterns='{{ primary_custom_colors_and_patterns }}'
                      class='color-swatch pill__color-swatch {% if settings.primary_shape_for_product_pages == 'round' %} color-swatch--round {% else %} color-swatch--square {% endif %}'
                      style='{% if is_image %} --gsc-color-swatch-value: url({{ selected_color_value | file_img_url: "200x" }}); {% endif %}'
                      {% if is_image %}
                        is-image
                      {% endif %}
                    ></shape-swatch>
                    <span class='pill__label'>{{ target_option_value }}</span>
                  </a>
                </div>
              {% endif %}
            {% endfor %}
          </div>
        </div>
      {% endif %}
    </div>
  </div>
{%- endif -%}
